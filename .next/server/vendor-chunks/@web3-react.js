"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@web3-react";
exports.ids = ["vendor-chunks/@web3-react"];
exports.modules = {

/***/ "(ssr)/./node_modules/@web3-react/walletconnect/node_modules/eventemitter3/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-react/walletconnect/node_modules/eventemitter3/index.js ***!
  \************************************************************************************/
/***/ ((module) => {

eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/walletconnect/node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/types/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@web3-react/types/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connector = void 0;\nclass Connector {\n    /**\n     * @param actions - Methods bound to a zustand store that tracks the state of the connector.\n     * @param onError - An optional handler which will report errors thrown from event listeners.\n     * Actions are used by the connector to report changes in connection status.\n     */\n    constructor(actions, onError) {\n        this.actions = actions;\n        this.onError = onError;\n    }\n    /**\n     * Reset the state of the connector without otherwise interacting with the connection.\n     */\n    resetState() {\n        this.actions.resetState();\n    }\n}\nexports.Connector = Connector;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvdHlwZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsiL1VzZXJzL21hY2Jvb2twcm8vRG9jdW1lbnRzL3Byb2dyYW1taW5nL2NsaWVudHMvZ29uem9fdW0vZ29uem9fMi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvdHlwZXMvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdG9yID0gdm9pZCAwO1xuY2xhc3MgQ29ubmVjdG9yIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYWN0aW9ucyAtIE1ldGhvZHMgYm91bmQgdG8gYSB6dXN0YW5kIHN0b3JlIHRoYXQgdHJhY2tzIHRoZSBzdGF0ZSBvZiB0aGUgY29ubmVjdG9yLlxuICAgICAqIEBwYXJhbSBvbkVycm9yIC0gQW4gb3B0aW9uYWwgaGFuZGxlciB3aGljaCB3aWxsIHJlcG9ydCBlcnJvcnMgdGhyb3duIGZyb20gZXZlbnQgbGlzdGVuZXJzLlxuICAgICAqIEFjdGlvbnMgYXJlIHVzZWQgYnkgdGhlIGNvbm5lY3RvciB0byByZXBvcnQgY2hhbmdlcyBpbiBjb25uZWN0aW9uIHN0YXR1cy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihhY3Rpb25zLCBvbkVycm9yKSB7XG4gICAgICAgIHRoaXMuYWN0aW9ucyA9IGFjdGlvbnM7XG4gICAgICAgIHRoaXMub25FcnJvciA9IG9uRXJyb3I7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc2V0IHRoZSBzdGF0ZSBvZiB0aGUgY29ubmVjdG9yIHdpdGhvdXQgb3RoZXJ3aXNlIGludGVyYWN0aW5nIHdpdGggdGhlIGNvbm5lY3Rpb24uXG4gICAgICovXG4gICAgcmVzZXRTdGF0ZSgpIHtcbiAgICAgICAgdGhpcy5hY3Rpb25zLnJlc2V0U3RhdGUoKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3RvciA9IENvbm5lY3RvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/types/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/walletconnect/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-react/walletconnect/dist/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WalletConnect = exports.URI_AVAILABLE = void 0;\nconst types_1 = __webpack_require__(/*! @web3-react/types */ \"(ssr)/./node_modules/@web3-react/types/dist/index.js\");\nconst eventemitter3_1 = __importDefault(__webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/@web3-react/walletconnect/node_modules/eventemitter3/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@web3-react/walletconnect/dist/utils.js\");\nexports.URI_AVAILABLE = 'URI_AVAILABLE';\nfunction parseChainId(chainId) {\n    return typeof chainId === 'string' ? Number.parseInt(chainId) : chainId;\n}\nclass WalletConnect extends types_1.Connector {\n    constructor({ actions, options, defaultChainId, timeout = 5000, onError }) {\n        super(actions, onError);\n        this.events = new eventemitter3_1.default();\n        this.disconnectListener = (error) => {\n            var _a;\n            this.actions.resetState();\n            if (error)\n                (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n        };\n        this.chainChangedListener = (chainId) => {\n            this.actions.update({ chainId: parseChainId(chainId) });\n        };\n        this.accountsChangedListener = (accounts) => {\n            this.actions.update({ accounts });\n        };\n        this.URIListener = (_, payload) => {\n            this.events.emit(exports.URI_AVAILABLE, payload.params[0]);\n        };\n        const { rpc } = options, rest = __rest(options, [\"rpc\"]);\n        this.options = rest;\n        this.rpc = Object.keys(rpc).reduce((accumulator, chainId) => {\n            const value = rpc[Number(chainId)];\n            accumulator[Number(chainId)] = Array.isArray(value) ? value : [value];\n            return accumulator;\n        }, {});\n        this.defaultChainId = defaultChainId !== null && defaultChainId !== void 0 ? defaultChainId : Number(Object.keys(this.rpc)[0]);\n        this.timeout = timeout;\n    }\n    isomorphicInitialize(chainId = this.defaultChainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.eagerConnection)\n                return;\n            // because we can only use 1 url per chainId, we need to decide between multiple, where necessary\n            const rpc = Promise.all(Object.keys(this.rpc).map((chainId) => __awaiter(this, void 0, void 0, function* () {\n                return [\n                    Number(chainId),\n                    yield (0, utils_1.getBestUrl)(this.rpc[Number(chainId)], this.timeout),\n                ];\n            }))).then((results) => results.reduce((accumulator, [chainId, url]) => {\n                accumulator[chainId] = url;\n                return accumulator;\n            }, {}));\n            return (this.eagerConnection = Promise.resolve().then(() => __importStar(__webpack_require__(/*! @walletconnect/ethereum-provider */ \"(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/cjs/index.js\"))).then((m) => __awaiter(this, void 0, void 0, function* () {\n                this.provider = new m.default(Object.assign(Object.assign({}, this.options), { chainId, rpc: yield rpc }));\n                this.provider.on('disconnect', this.disconnectListener);\n                this.provider.on('chainChanged', this.chainChangedListener);\n                this.provider.on('accountsChanged', this.accountsChangedListener);\n                this.provider.connector.on('display_uri', this.URIListener);\n            })));\n        });\n    }\n    /** {@inheritdoc Connector.connectEagerly} */\n    connectEagerly() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const cancelActivation = this.actions.startActivation();\n            try {\n                yield this.isomorphicInitialize();\n                if (!((_a = this.provider) === null || _a === void 0 ? void 0 : _a.connected))\n                    throw Error('No existing connection');\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = yield this.provider.request({ method: 'eth_accounts' });\n                if (!accounts.length)\n                    throw new Error('No accounts returned');\n                const chainId = yield this.provider.request({ method: 'eth_chainId' });\n                this.actions.update({ chainId: parseChainId(chainId), accounts });\n            }\n            catch (error) {\n                cancelActivation();\n                throw error;\n            }\n        });\n    }\n    /**\n     * @param desiredChainId - The desired chainId to connect to.\n     */\n    activate(desiredChainId) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // this early return clause catches some common cases if activate is called after connection has been established\n            if ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.connected) {\n                if (!desiredChainId || desiredChainId === this.provider.chainId)\n                    return;\n                // because the provider is already connected, we can ignore the suppressUserPrompts\n                return this.provider.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: `0x${desiredChainId.toString(16)}` }],\n                });\n            }\n            const cancelActivation = this.actions.startActivation();\n            // if we're trying to connect to a specific chain that we're not already initialized for, we have to re-initialize\n            if (desiredChainId && desiredChainId !== ((_b = this.provider) === null || _b === void 0 ? void 0 : _b.chainId))\n                yield this.deactivate();\n            try {\n                yield this.isomorphicInitialize(desiredChainId);\n                if (!this.provider)\n                    throw new Error('No provider');\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = yield this.provider\n                    .request({ method: 'eth_requestAccounts' })\n                    // if a user triggers the walletconnect modal, closes it, and then tries to connect again,\n                    // the modal will not trigger. by deactivating when this happens, we prevent the bug.\n                    .catch((error) => __awaiter(this, void 0, void 0, function* () {\n                    if ((error === null || error === void 0 ? void 0 : error.message) === 'User closed modal')\n                        yield this.deactivate();\n                    throw error;\n                }));\n                const chainId = parseChainId(yield this.provider.request({ method: 'eth_chainId' }));\n                /**\n                 * TODO(INFRA-140): It is possible that the user has changed the chain in the wallet while the modal was open.\n                 * In that case, WalletConnect will not update the RPC endpoint to the one configured for that chain.\n                 * Unfortunately, there's no public API to set the `rpc` endpoint, rather than calling private `setHttpProvider`.\n                 * We should remove this once the underlying bug is resolved upstream.\n                 */\n                if (chainId !== desiredChainId) {\n                    // @ts-ignore\n                    this.provider.http = this.provider.setHttpProvider(chainId);\n                }\n                this.actions.update({ chainId, accounts });\n            }\n            catch (error) {\n                cancelActivation();\n                throw error;\n            }\n        });\n    }\n    /** {@inheritdoc Connector.deactivate} */\n    deactivate() {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.off('disconnect', this.disconnectListener);\n            (_b = this.provider) === null || _b === void 0 ? void 0 : _b.off('chainChanged', this.chainChangedListener);\n            (_c = this.provider) === null || _c === void 0 ? void 0 : _c.off('accountsChanged', this.accountsChangedListener);\n            // we don't unregister the display_uri handler because the walletconnect types/inheritances are really broken.\n            // it doesn't matter, anyway, as the connector object is destroyed\n            yield ((_d = this.provider) === null || _d === void 0 ? void 0 : _d.disconnect());\n            this.provider = undefined;\n            this.eagerConnection = undefined;\n            this.actions.resetState();\n        });\n    }\n}\nexports.WalletConnect = WalletConnect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/walletconnect/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/walletconnect/dist/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@web3-react/walletconnect/dist/utils.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBestUrl = void 0;\n/**\n * @param urls - An array of URLs to try to connect to.\n * @param timeout - How long to wait before a call is considered failed, in ms.\n */\nfunction getBestUrl(urls, timeout) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // if we only have 1 url, it's the best!\n        if (urls.length === 1)\n            return urls[0];\n        const [HttpConnection, JsonRpcProvider] = yield Promise.all([\n            Promise.resolve().then(() => __importStar(__webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\"))).then(({ HttpConnection }) => HttpConnection),\n            Promise.resolve().then(() => __importStar(__webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\"))).then(({ JsonRpcProvider }) => JsonRpcProvider),\n        ]);\n        // the below returns the first url for which there's been a successful call, prioritized by index\n        return new Promise((resolve) => {\n            let resolved = false;\n            const successes = {};\n            urls.forEach((url, i) => {\n                const http = new JsonRpcProvider(new HttpConnection(url));\n                // create a promise that resolves on a successful call, and rejects on a failed call or after timeout milliseconds\n                const promise = new Promise((resolve, reject) => {\n                    http\n                        .request({ method: 'eth_chainId' })\n                        .then(() => resolve())\n                        .catch(() => reject());\n                    // set a timeout to reject\n                    setTimeout(() => {\n                        reject();\n                    }, timeout);\n                });\n                void promise\n                    .then(() => true)\n                    .catch(() => false)\n                    .then((success) => {\n                    // if we already resolved, return\n                    if (resolved)\n                        return;\n                    // store the result of the call\n                    successes[i] = success;\n                    // if this is the last call and we haven't resolved yet - do so\n                    if (Object.keys(successes).length === urls.length) {\n                        const index = Object.keys(successes).findIndex((j) => successes[Number(j)]);\n                        // no need to set resolved to true, as this is the last promise\n                        return resolve(urls[index === -1 ? 0 : index]);\n                    }\n                    // otherwise, for each prospective index, check if we can resolve\n                    new Array(urls.length).fill(0).forEach((_, prospectiveIndex) => {\n                        // to resolve, we need to:\n                        // a) have successfully made a call\n                        // b) not be waiting on any other higher-index calls\n                        if (successes[prospectiveIndex] &&\n                            new Array(prospectiveIndex).fill(0).every((_, j) => successes[j] === false)) {\n                            resolved = true;\n                            resolve(urls[prospectiveIndex]);\n                        }\n                    });\n                });\n            });\n        });\n    });\n}\nexports.getBestUrl = getBestUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/walletconnect/dist/utils.js\n");

/***/ })

};
;